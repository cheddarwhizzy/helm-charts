# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json
suite: features test
templates:
  - ingress.yaml
  - horizontalpodautoscaler.yaml
  - rbac.yaml
  - configmap.yaml
  - secrets.yaml
tests:
  - it: should render ingress when enabled
    set:
      ingress:
        enabled: true
        subdomain: myapp
        domain: example.com
        routes:
          - name: default
            path: /
            pathType: Prefix
    asserts:
      - isKind:
          of: Ingress
      - equal:
          path: metadata.name
          value: helm-base
      - equal:
          path: spec.rules[0].host
          value: myapp.example.com

  - it: should not render ingress when disabled
    set:
      ingress:
        enabled: false
    asserts:
      - notExists:
          path: kind

  - it: should render HPA when enabled
    set:
      hpa:
        enabled: true
        minReplicaCount: 2
        maxReplicaCount: 10
    documentIndex: 1
    asserts:
      - isKind:
          of: HorizontalPodAutoscaler
      - equal:
          path: metadata.name
          value: helm-base
      - equal:
          path: spec.minReplicas
          value: 2
      - equal:
          path: spec.maxReplicas
          value: 10

  - it: should render RBAC when enabled
    set:
      rbac:
        create: true
        rules:
          - apiGroups: [""]
            resources: ["pods"]
            verbs: ["get", "list"]
    documentIndex: 2
    asserts:
      - isKind:
          of: Role
      - equal:
          path: metadata.name
          value: helm-base
      - equal:
          path: rules[0].apiGroups[0]
          value: ""

  - it: should render ConfigMap when defined
    set:
      configMaps:
        - name: my-config
          data:
            key1: value1
            key2: value2
    documentIndex: 3
    asserts:
      - isKind:
          of: ConfigMap
      - equal:
          path: metadata.name
          value: my-config
      - equal:
          path: data.key1
          value: value1
      - equal:
          path: data.key2
          value: value2

  - it: should render Secret when defined
    set:
      secrets:
        - name: my-secret
          data:
            username: dXNlcm5hbWU=
            password: cGFzc3dvcmQ=
    documentIndex: 4
    asserts:
      - isKind:
          of: Secret
      - equal:
          path: metadata.name
          value: my-secret
      - equal:
          path: data.username
          value: dXNlcm5hbWU=
