{{- $commonLabels := include "helm-base.commonLabels" . }}
{{- $extraAnnotations := include "helm-base.commonAnnotations" . }}
{{- $name := include "helm-base.fullname" . }}
{{- $root := $ }}

{{- range $k, $h := .Values.hooks }}
{{ $kind := default "Job" $h.kind }}

{{- if eq $kind "Job" }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $name }}-{{ $h.name }}
  labels:
{{ $commonLabels | indent 4 }}
  annotations:
    "helm.sh/hook": {{ default "pre-upgrade,pre-install" (tpl $h.onEvent $root) }}
    "helm.sh/hook-weight": "{{ default (mul -1 (add1 $k)) $h.weight}}"
    "helm.sh/hook-delete-policy": {{ default "before-hook-creation" $h.deletePolicy }}
spec:
  template:
    metadata:
      labels:
{{ $commonLabels | indent 8 }}
      name: {{ $name }}
      annotations:
    {{- if $h.annotations }}
      {{- range $k, $v := $h.annotations }}
        {{ $k }}: "{{ tpl $v $ }}"
      {{- end }}
    {{- end }}
{{ $extraAnnotations | indent 8 }}
    spec:
      {{- if $.Values.serviceAccount.name }}
      serviceAccount: {{ tpl $.Values.serviceAccount.name $ }}
      {{- end}}
      restartPolicy: {{ default "Never" $h.restartPolicy }}
      {{- if $.Values.imagePullSecrets }}
      imagePullSecrets:
      {{- range $_, $s := $.Values.imagePullSecrets }}
      - name: "{{ $s }}"
      {{- end }}
      {{- end }}

{{- if $h.initContainers }}
      initContainers:
{{- range $k, $c := $h.initContainers }}
{{- $new := dict }}
{{- range $k, $v := $ }}
{{- $_ := set $new $k $v }}
{{- end }}
{{- range $k, $v := $c }}
{{- $_ := set $new $k $v }}
{{- end }}
{{ include "helm-base.containerBase" $new | indent 6 }}
{{- end }}
{{- end }}

      containers:
{{- $hvols := dict }}
{{- range $k, $c := $h.containers }}
{{- $new := dict }}
{{- range $k, $v := $ }}
{{- $_ := set $new $k $v }}
{{- end }}
{{- range $k, $v := $c }}
{{- $_ := set $new $k $v }}
{{- end }}
{{ include "helm-base.containerBase" $new | indent 6 }}
{{ $hvols = $new }}
{{- end }}

  {{- if $.Values.nodeSelector }}
    {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- end }}
  {{- if $.Values.affinity }}
    {{- with $.Values.affinity }}
      affinity:
        {{- tpl . $ | nindent 8 }}
    {{- end }}
  {{- end }}
  {{- if $.Values.tolerations }}
    {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
  {{- end }}

{{- $n2 := dict }}
{{- $_ := set $n2 "volumes" $h.volumes }}
{{- $_ := set $n2 "Values" $.Values }}
{{- $_ := set $n2 "Chart" $.Chart }}
{{- $_ := set $n2 "Release" $.Release }}
{{- $_ := set $n2 "Template" $.Template }}
{{- $volumes := include "helm-base.hookvolumes" $n2 }}
{{- $volumes | indent 6 }}

{{- end }} {{/* End Job kind*/}}


{{- if eq "$h.kind" "ConfigMap" }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $name }}-{{ $h.name }}
  labels:
{{ $commonLabels | indent 4 }}
  annotations:
    "helm.sh/hook": {{ default "pre-upgrade,pre-install" $h.onEvent }}
    "helm.sh/hook-weight": "{{ default (mul -1 (add1 $k)) $h.weight}}"
data:
{{- with $h.data }}
{{- range $k, $d := .}}
  {{ tpl $k $ }}: |
{{ (tpl $d $) | indent 4 }}
{{- end }}
{{- end }}
{{- end }} {{/* End ConfigMap kind */}}

{{- end }}
